@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Плавный скролл
   */
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "OpenSans";
  src: url("../../fonts/OpenSans-Light.woff2") format("woff2");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "OpenSans";
  src: url("../../fonts/OpenSans-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "OpenSans";
  src: url("../../fonts/OpenSans-SemiBold.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-dark: #1C1C1C;
  --color-text: #787878;
  --color-gray-light: #6B6B6B;
  --color-border: #DADADA;
  --color-light: #fff;
  --color-blue: #3172B9;
  --color-blue-active: #3172B9;
  --color-blue-hover: #71A7E2;
  --border-input: 1px solid var(--color-border);
  --border: 1px solid #E4E4E4;
  --border-radius: 5px ;
  --border-radius-small: 3px ;
  --border-radius-large: 50px ;
  --font-family-base: "OpenSans", sans-serif;
  --container-width: 1170px;
  --container-padding-x: 15px;
  --input-heigth: 60px;
  --transition-duration: 0.2s;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 767px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .visible-mobile {
    display: none !important;
  }
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

body {
  font-size: clamp(14px, 0.9090909091vw, 14px);
  font-family: var(--font-family-base);
  font-weight: 400;
  background-color: var(--color-light);
  color: var(--color-text);
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
}

h2 {
  font-size: clamp(36px, 2.3376623377vw, 36px);
  font-weight: 300;
  line-height: 1.3;
  color: var(--color-dark);
}

h3 {
  font-size: clamp(20px, 1.2987012987vw, 20px);
  font-weight: 600;
  line-height: 1.3;
  color: var(--color-dark);
}

@media (max-width: 1023px) {
  .logo__image {
    width: 80px;
    height: 30px;
  }
}

.button {
  font-weight: 600;
  font-size: 15px;
  border: none;
  border-radius: var(--border-radius-small);
  color: var(--color-light);
  background-color: var(--color-blue);
  cursor: pointer;
}
@media (hover: hover) {
  .button:hover {
    background-color: var(--color-blue-hover);
  }
}
@media (hover: none) {
  .button:active {
    background-color: var(--color-blue-hover);
  }
}
.button:active {
  outline: 1px solid var(--color-blue-hover);
  outline-offset: 2px;
  background-color: #0e3b6c;
}

.burger-button {
  padding: 0;
  border: none;
  background-color: transparent;
  cursor: pointer;
  width: 40px;
  aspect-ratio: 1;
  position: relative;
  border: 2px solid var(--color-blue);
  border-radius: var(--border-radius-small);
}
@media (hover: hover) {
  .burger-button:hover {
    color: var(--color-blue-hover);
  }
}
@media (hover: none) {
  .burger-button:active {
    color: var(--color-blue-hover);
  }
}
.burger-button::after {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  width: 50%;
  height: 2px;
  background-color: var(--color-blue);
  border-radius: 10px;
  box-shadow: 0 -6px var(--color-blue), 0 6px var(--color-blue);
}

.header {
  padding-top: 30px;
}
@media (max-width: 1023px) {
  .header {
    padding-top: 15px;
  }
}
.header__inner {
  height: 80px;
  display: flex;
  align-items: center;
  -moz-column-gap: 50px;
       column-gap: 50px;
}
@media (max-width: 1280px) {
  .header__inner {
    -moz-column-gap: 35px;
         column-gap: 35px;
  }
}
@media (max-width: 1023px) {
  .header__inner {
    -moz-column-gap: 25px;
         column-gap: 25px;
  }
}
@media (max-width: 850px) {
  .header__inner {
    -moz-column-gap: 20px;
         column-gap: 20px;
  }
}
.header__menu {
  margin-left: auto;
}
.header__menu-list {
  display: flex;
  align-items: center;
  -moz-column-gap: 50px;
       column-gap: 50px;
}
@media (max-width: 1280px) {
  .header__menu-list {
    -moz-column-gap: 35px;
         column-gap: 35px;
  }
}
@media (max-width: 1023px) {
  .header__menu-list {
    -moz-column-gap: 30px;
         column-gap: 30px;
  }
}
@media (max-width: 850px) {
  .header__menu-list {
    -moz-column-gap: 25px;
         column-gap: 25px;
  }
}
.header__menu-link {
  position: relative;
  display: inline-flex;
  height: 40px;
  align-items: center;
  font-size: 15px;
  font-weight: 600;
  color: var(--color-dark);
}
@media (hover: hover) {
  .header__menu-link:hover {
    color: var(--color-blue-hover);
  }
}
@media (hover: none) {
  .header__menu-link:active {
    color: var(--color-blue-hover);
  }
}
.header__menu-link:active {
  color: var(--color-blue);
  text-decoration: underline;
}
@media (max-width: 1023px) {
  .header__menu-link {
    font-size: 14px;
  }
}
@media (max-width: 850px) {
  .header__menu-link {
    font-size: 13px;
  }
}
.header__button {
  padding: 15px 35px;
}
@media (max-width: 1023px) {
  .header__button {
    padding: 10px 25px;
  }
}/*# sourceMappingURL=styles.css.map */